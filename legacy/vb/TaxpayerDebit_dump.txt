Imports System.Data.SqlClient
Public Class Debit

    Public localtin As String
    Public taxpayername As String
    Dim conn As New SqlConnection(My.Settings.ItaxConnString)
    Dim discountmonth As Integer = 0
    Dim discountmonthmode As Boolean = False
    Dim qtradvance As Boolean = False
    Dim qtrpromt As Boolean = False
    Dim postingyear As Integer
    Dim postingmonth As Integer
    Dim disc_annual_advance As Decimal
    Dim disc_annual1 As Decimal
    Dim disc_annual2 As Decimal
    Dim disc_annual3 As Decimal
    Dim disc_qtr_promt As Decimal
    Dim disc_qtr_advance As Decimal
    Public currentdate As DateTime
    Dim mon_pen As Decimal

    Private Sub Debit_Load(sender As Object, e As EventArgs) Handles MyBase.Load
        '////REMOVE AFTER TESTING
        'currentdate = Now.Date
        'localtin = "0130080016442"
        'taxpayername = "Allan M. Posadas"
        'currentmunicipalID = 8
        'userid = "sysdba"
        '////


        Me.DebitDS.EnforceConstraints = False
        Dim mon As Integer = currentdate.Month
        Dim yer As Integer = currentdate.Year
        postingyear = currentdate.Year
        postingmonth = currentdate.Month


        delete_pendisc()
        loaddiscpen_rates()
        compute_pendisc()

        Me.PropertiesTableAdapter.FillByOwner(Me.DebitDS.Properties, localtin)
        Me.DuesTableAdapter.FillByOwner(Me.DebitDS.Dues, localtin)

        For Each rw As DataRow In DebitDS.Dues.Rows
            rw.Item("payable") = rw.Item("amountdue")
        Next

        lbllocaltin.Text = localtin
        lblowner.Text = taxpayername

        AddHandler DebitDS.Dues.ColumnChanged, New DataColumnChangeEventHandler(AddressOf datacol)

        initializedues()



    End Sub

    Private Sub initializedues()
        Dim allcheck As Boolean = True
        Dim amountdue As Decimal = 0
        Dim selectdue As Decimal = 0

        For Each rw As DataRow In DebitDS.Dues.Rows
            If rw("vis") = False Then
            Else
                amountdue += rw("amountdue")
                If rw("chk") = False Then
                    allcheck = False
                Else
                    Try
                        selectdue += rw("payable")
                    Catch ex As Exception
                    End Try
                End If
            End If
        Next

        amtdue.Text = Format(amountdue, "##,##0.00")
        seldue.Text = Format(selectdue, "##,##0.00")
    End Sub

    Private Sub loaddiscpen_rates()
        Me.T_DISCOUNTTableAdapter.Fill(Me.DebitDS.T_DISCOUNT)

        Me.T_PENALTYINTERESTPARAMTableAdapter.Fill(Me.DebitDS.T_PENALTYINTERESTPARAM)

        With DebitDS.T_DISCOUNT
            Dim rw As DataRow()
            'MsgBox("DISCOUNTMONTH=0  AND YEARFROM<=" + postingyear.ToString + " AND YEARTO>=" + postingyear.ToString)
            rw = .Select("DISCOUNTMONTH=0  AND YEARFROM<=" + postingyear.ToString + " AND YEARTO>=" + postingyear.ToString)

            Try
                disc_annual_advance = rw(0).Item("INTERESTRATE")
            Catch ex As Exception
                MsgBox(ex.Message + "blablabla")
                disc_annual_advance = 0
            End Try

            rw = .Select("DISCOUNTMONTH=1 AND YEARFROM<=" + postingyear.ToString + " AND YEARTO>=" + postingyear.ToString)
            Try
                disc_annual1 = rw(0).Item("INTERESTRATE")
            Catch ex As Exception
                disc_annual1 = 0
            End Try

            rw = .Select("DISCOUNTMONTH=2 AND YEARFROM<=" + postingyear.ToString + " AND YEARTO>=" + postingyear.ToString)
            Try
                disc_annual2 = rw(0).Item("INTERESTRATE")
            Catch ex As Exception
                disc_annual2 = 0
            End Try

            rw = .Select("DISCOUNTMONTH=3 AND YEARFROM<=" + postingyear.ToString + " AND YEARTO>=" + postingyear.ToString)
            Try
                disc_annual3 = rw(0).Item("INTERESTRATE")
            Catch ex As Exception
                disc_annual3 = 0
            End Try

            rw = .Select("DISCOUNTMONTH=40 AND YEARFROM<=" + postingyear.ToString + " AND YEARTO>=" + postingyear.ToString)
            Try
                disc_qtr_promt = rw(0).Item("INTERESTRATE")
            Catch ex As Exception
                disc_qtr_promt = 0
            End Try

            rw = .Select("DISCOUNTMONTH=41 AND YEARFROM<=" + postingyear.ToString + " AND YEARTO>=" + postingyear.ToString)
            Try
                disc_qtr_advance = rw(0).Item("INTERESTRATE")
            Catch ex As Exception
                disc_qtr_advance = 0
            End Try

            Try
                mon_pen = Me.DebitDS.T_PENALTYINTERESTPARAM.Rows(0).Item("RATE")
                'MsgBox(mon_pen)
            Catch ex As Exception
                mon_pen = 0
            End Try

        End With

    End Sub

    Private Sub delete_pendisc()
        Dim com As New SqlCommand("DELETE FROM TPACCOUNT WHERE EARMARK_CT='OPN' AND (EVENTOBJECT_CT='PEN' OR EVENTOBJECT_CT='DED') and LOCAL_TIN='" + localtin + "'", conn)
        conn.Open()
        com.ExecuteNonQuery()
        conn.Close()

        Dim adap2 As New SqlCommand("UPDATE    TPACCOUNT SET JOURNALID =(SELECT  TOP (1) POSTINGJOURNAL_ID FROM POSTINGJOURNAL WHERE (PROP_ID = TPACCOUNT.PROP_ID) AND (TAXYEAR = TPACCOUNT.TAXYEAR)) WHERE JOURNALID IS NULL AND LOCAL_TIN='" + localtin + "'", conn)

        Try
            conn.Open()
        Catch ex As Exception
            conn.Close()
            conn.Open()
        End Try
        adap2.CommandTimeout = 0
        adap2.ExecuteNonQuery()
        conn.Close()
    End Sub

    Private Function event_object(taxperiod As Integer, taxyear As Integer) As String
        discountmonth = 0
        qtradvance = False
        qtrpromt = False

        discountmonthmode = False
        If postingyear > taxyear Then
            'MsgBox("return penalty")
            Return "PEN"
        ElseIf postingyear < taxyear Then

            If taxperiod = 41 Then
                qtradvance = True
            End If
            Return "DED"

        End If

        If taxperiod = 99 Then 'Annual
            If postingyear = taxyear And postingmonth >= 4 Then
                Return "PEN"
            ElseIf postingyear = taxyear And postingmonth <= 3 Then
                discountmonth = postingmonth
                discountmonthmode = True
                Return "DED"
            End If
        ElseIf taxperiod = 21 Then 'First Semi-Annual
            If postingyear = taxyear And postingmonth >= 7 Then
                Return "PEN"
            ElseIf postingyear = taxyear And postingmonth <= 6 Then
                If postingmonth <= 3 Then
                    discountmonth = postingmonth
                    discountmonthmode = True
                End If
                Return "DED"
            End If
        ElseIf taxperiod = 22 Then 'Second Semi-Annual
            Return "DED"
        ElseIf taxperiod = 41 Then 'First Quarter
            If postingyear = taxyear And postingmonth >= 4 Then
                Return "PEN"
            ElseIf postingyear = taxyear And postingmonth <= 3 Then
                If postingmonth = 1 Then
                    qtrpromt = True
                End If
                Return "DED"
            End If
        ElseIf taxperiod = 42 Then 'Second Quarter
            If postingyear = taxyear And postingmonth >= 7 Then
                Return "PEN"
            ElseIf postingyear = taxyear And postingmonth <= 6 Then
                If postingmonth = 4 Then
                    qtrpromt = True
                ElseIf postingmonth < 4 Then
                    qtradvance = True
                End If
                Return "DED"
            End If
        ElseIf taxperiod = 43 Then 'Third Quarter
            If postingyear = taxyear And postingmonth >= 10 Then
                Return "PEN"
            ElseIf postingyear = taxyear And postingmonth <= 9 Then
                If postingmonth = 7 Then
                    qtrpromt = True
                ElseIf postingmonth < 7 Then
                    qtradvance = True
                End If
                Return "DED"
            End If
        ElseIf taxperiod = 44 Then 'Fourth Quarter
            If postingmonth = 10 Then
                qtrpromt = True
            ElseIf postingmonth < 10 Then
                qtradvance = True
            End If
            Return "DED"
        End If

        Return "INV"

    End Function

    Private Function ded_penvalue(taxperiod As Integer, taxyear As Integer, event_ct As String, taxable As Decimal) As Decimal

        If event_ct = "DED" Then
            If taxperiod = 99 Then
                If discountmonthmode = True Then
                    If discountmonth = 1 Then
                        Return -(taxable * disc_annual1)
                    ElseIf discountmonth = 2 Then
                        Return -(taxable * disc_annual2)
                    ElseIf discountmonth = 3 Then
                        Return -(taxable * disc_annual3)
                    End If
                Else
                    Return -(taxable * disc_annual_advance)
                End If
            ElseIf taxperiod = 21 Or taxperiod = 22 Then
                Return -(taxable * disc_qtr_advance)
            ElseIf taxperiod = 41 Or taxperiod = 42 Or taxperiod = 43 Or taxperiod = 44 Then
                Return -(taxable * disc_qtr_advance)
            End If
        ElseIf event_ct = "PEN" Then
            If taxperiod = 99 Then
                Dim d As Integer = distance(1, taxyear, postingmonth, postingyear)

                If taxyear <= 1991 Then
                    d = 12
                End If

                If d <= 36 Then
                    'MsgBox(taxable.ToString + " * " + mon_pen.ToString + " * Distance: " + d.ToString)
                    Return (taxable * mon_pen) * d
                Else
                    Return (taxable * mon_pen) * 36
                End If
            ElseIf taxperiod = 21 Then
                Dim d As Integer = distance(1, taxyear, postingmonth, postingyear)

                If taxyear <= 1991 Then
                    d = 12
                End If

                If d <= 36 Then
                    Return (taxable * mon_pen) * d
                Else
                    Return (taxable * mon_pen) * 36
                End If
            ElseIf taxperiod = 22 Then
                Dim d As Integer = distance(7, taxyear, postingmonth, postingyear)

                If taxyear <= 1991 Then
                    d = 12
                End If

                If d <= 36 Then
                    Return (taxable * mon_pen) * d
                Else
                    Return (taxable * mon_pen) * 36
                End If
            ElseIf taxperiod = 41 Then
                'MsgBox(taxable)
                'MsgBox(mon_pen)

                Dim d As Integer = distance(1, taxyear, postingmonth, postingyear)
                'MsgBox((taxable * mon_pen) * d)

                If taxyear <= 1991 Then
                    d = 12
                End If


                If d <= 36 Then
                    Return (taxable * mon_pen) * d
                Else
                    Return (taxable * mon_pen) * 36
                End If
            ElseIf taxperiod = 42 Then
                Dim d As Integer = distance(4, taxyear, postingmonth, postingyear)

                If taxyear <= 1991 Then
                    d = 12
                End If

                If d <= 36 Then
                    Return (taxable * mon_pen) * d
                Else
                    Return (taxable * mon_pen) * 36
                End If
            ElseIf taxperiod = 43 Then
                Dim d As Integer = distance(7, taxyear, postingmonth, postingyear)

                If taxyear <= 1991 Then
                    d = 12
                End If

                If d <= 36 Then
                    Return (taxable * mon_pen) * d
                Else
                    Return (taxable * mon_pen) * 36
                End If
            ElseIf taxperiod = 44 Then
                Dim d As Integer = distance(10, taxyear, postingmonth, postingyear)

                If taxyear <= 1991 Then
                    d = 12
                End If

                If d <= 36 Then
                    Return (taxable * mon_pen) * d
                Else
                    Return (taxable * mon_pen) * 36
                End If
            End If
        End If

        Return 0
    End Function

    Private Function distance(mon1 As Integer, year1 As Integer, mon2 As Integer, year2 As Integer) As Integer
        Dim counter As Integer = 1
Back:
        If mon1 = 12 Then
            mon1 = 1
            year1 += 1
        Else
            mon1 += 1
        End If
        counter = counter + 1

        If mon1 = mon2 And year1 = year2 Then
        Else
            GoTo Back
        End If
        Return counter
    End Function


    Private Sub compute_pendisc()

        Me.TPACCOUNTTableAdapter.FillByOwner(Me.DebitDS.TPACCOUNT, localtin)
        Dim n As DataRow
        Dim en As Integer = DebitDS.TPACCOUNT.Rows.Count - 1
        Dim credits As Decimal
        Dim dbset As New DataSet
        Dim adap As SqlDataAdapter
        For x As Integer = 0 To en
            'MsgBox(localtin)
            With DebitDS.TPACCOUNT.Rows(x)

                dbset.Clear()
                adap = New SqlDataAdapter("select sum(debitamount)/2 as credits from TPAccount WHERE (EVENTOBJECT_CT='TCR' or EVENTOBJECT_CT='TDF') AND EARMARK_CT='OPN' AND TAXYEAR=" + .Item("TAXYEAR").ToString + " AND TAXPERIOD_CT=" + .Item("TAXPERIOD_CT").ToString + " AND PROP_ID=" + .Item("PROP_ID").ToString + " AND JOURNALID=" + .Item("JOURNALID").ToString, conn)
                'MsgBox("select sum(debitamount)/2 as credits from TPAccount WHERE (EVENTOBJECT_CT='TCR' or EVENTOBJECT_CT='TDF') AND EARMARK_CT='OPN' AND TAXYEAR=" + .Item("TAXYEAR").ToString + " AND TAXPERIOD_CT=" + .Item("TAXPERIOD_CT").ToString + " AND PROP_ID=" + .Item("PROP_ID").ToString)
                adap.Fill(dbset, "a")
                If dbset.Tables("a").Rows.Count = 0 Then
                    credits = 0
                Else
                    Try
                        credits = dbset.Tables("a").Rows(0).Item(0)
                    Catch ex As Exception
                        credits = 0
                    End Try

                End If
                If .Item("EVENTOBJECT_CT") = "TDF" Or .Item("EVENTOBJECT_CT") = "TCR" Then
                Else
                    n = DebitDS.TPACCOUNT.NewRow
                    n("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    n("REFPOSTINGID") = .Item("POSTING_ID")
                    n("LOCAL_TIN") = localtin
                    n("PROP_ID") = .Item("PROP_ID")
                    n("TAXYEAR") = .Item("TAXYEAR")
                    n("ITAXTYPE_CT") = .Item("ITAXTYPE_CT")
                    n("MUNICIPAL_ID") = currentmunicipalID
                    n("EVENTOBJECT_CT") = event_object(Val(.Item("TAXPERIOD_CT")), Val(.Item("TAXYEAR")))
                    n("CASETYPE_CT") = n("EVENTOBJECT_CT")
                    n("DEBITAMOUNT") = Round(ded_penvalue(Val(.Item("TAXPERIOD_CT")), Val(.Item("TAXYEAR")), n("EVENTOBJECT_CT"), .Item("DEBITAMOUNT")), 2)
                    n("VALUEDATE") = currentdate.Date
                    n("CREDITAMOUNT") = 0
                    n("EARMARK_CT") = "OPN"
                    n("TAXPERIOD_CT") = .Item("TAXPERIOD_CT")
                    n("USERID") = currentuser
                    n("TRANSDATE") = CType(currentdate, DateTime)
                    n("CANCELLED_BV") = False
                    n("JOURNALID") = .Item("JOURNALID")

                    DebitDS.TPACCOUNT.Rows.Add(n)

                End If
            End With

        Next

        Validate()
        TPBS.EndEdit()
        TableAdapterManager.UpdateAll(DebitDS)

    End Sub

    Private Sub PropertiesDataGridView_CellContentClick(sender As Object, e As DataGridViewCellEventArgs) Handles PropertiesDataGridView.CellContentClick
        PropertiesDataGridView.CommitEdit(DataGridViewDataErrorContexts.Commit)
    End Sub

    Private Sub PropertiesDataGridView_CellContentDoubleClick(sender As Object, e As DataGridViewCellEventArgs) Handles PropertiesDataGridView.CellContentDoubleClick
        PropertiesDataGridView.CommitEdit(DataGridViewDataErrorContexts.Commit)
    End Sub

    Private Sub PropertiesDataGridView_CurrentCellChanged(sender As Object, e As EventArgs) Handles PropertiesDataGridView.CurrentCellChanged

    End Sub

    Private Sub changeval(x As Boolean, tdno As String)
        Dim duetd As String

        For y As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.DefaultView.Item(y)
                duetd = .Item("TDNO")
                If duetd = tdno Then

                    .Item("chk") = x
                    .Item("vis") = x
                    If x = True Then
                        .Item("payable") = .Item("amountdue")
                    Else
                        .Item("payable") = 0
                    End If

                End If
            End With

        Next

    End Sub

    Private Sub updateview()
        For y As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            DuesDataGridView.CurrentCell = Nothing
            If DebitDS.Dues.DefaultView.Item(y).Item("vis") = True Then
                DuesDataGridView.Rows(y).Visible = True
            Else
                DuesDataGridView.Rows(y).Visible = False
            End If

        Next
    End Sub

    Private Sub PropertiesDataGridView_CellValueChanged(sender As Object, e As DataGridViewCellEventArgs) Handles PropertiesDataGridView.CellValueChanged
        Try

            If PropertiesDataGridView.CurrentCell.ColumnIndex = 0 Then
                If PropertiesDataGridView.CurrentRow.Cells("chk").Value = True Then
                    changeval(True, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                Else
                    changeval(False, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                End If
                updateview()
            End If
        Catch ex As Exception

        End Try

    End Sub

    Private Sub unselect_b_Click(sender As Object, e As EventArgs) Handles unselect_b.Click
        initializeselection()
    End Sub

    Private Sub initializeselection()
        If Checkall.Checked = True Then
            Checkall.Checked = False
        Else
            Checkall.Checked = True
        End If
        If Checkall.Checked = True Then
            unselect_b.Text = "Unselect All"
            If DebitDS.Dues.Rows.Count = 0 Then
            Else
                For Each rw As DataRow In DebitDS.Dues.Rows
                    If rw("vis") = False Then
                    Else
                        rw("chk") = True
                    End If
                Next
            End If
        Else
            unselect_b.Text = "Select All"
            If DebitDS.Dues.Rows.Count = 0 Then
            Else
                For Each rw As DataRow In DebitDS.Dues.Rows
                    If rw("vis") = False Then
                    Else
                        rw("chk") = False
                    End If
                Next
            End If
        End If
    End Sub


    Private Sub recal_b_Click(sender As Object, e As EventArgs) Handles recal_b.Click
        Dim pen As New penperiod
        If pen.ShowDialog = DialogResult.OK Then
            postingyear = pen.yr
            postingmonth = pen.mon
            delete_pendisc()
            loaddiscpen_rates()
            compute_pendisc()


            Me.DuesTableAdapter.FillByOwner(Me.DebitDS.Dues, localtin)

            For Each rw As DataRow In DebitDS.Dues.Rows
                rw.Item("payable") = rw.Item("amountdue")
            Next
            Try

                If PropertiesDataGridView.CurrentCell.ColumnIndex = 0 Then
                    If PropertiesDataGridView.CurrentRow.Cells("chk").Value = True Then
                        changeval(True, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                    Else
                        changeval(False, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                    End If
                    updateview()
                End If
            Catch ex As Exception

            End Try
        End If
    End Sub

    Private Sub multiowner_b_Click(sender As Object, e As EventArgs) Handles multiowner_b.Click
        If DebitDS.Dues.Rows.Count = 0 Then
        Else
            Dim x As String = MsgBox("Are you sure you want to split the payment based on the percentage of multiple owners?", vbYesNo, "Confirmation")
            If x = vbYes Then
                If checkbiquarterdues() = True Then
                    multiple_owners()
                Else
                    MsgBox("Payment for multiple owners is not applicable for Quarterly and Bi-Annual mode.", vbOK, "Invalid Selection")
                End If
            End If
        End If
    End Sub

    Private Sub multiple_owners()
        DebitDS.TPACCOUNT.Clear()
        Dim rw As DataRow
        Dim l As New ArrayList
        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.Rows(x)
                If .Item("chk") = True Then

                    If .Item("EVENTOBJECT_CT") = "TDF" Or .Item("EVENTOBJECT_CT") = "TCR" Or .Item("EVENTOBJECT_CT") = "PBL" Then
                        MsgBox("Tax Dues with Tax Credit, Tax Difference or Partial Pay cannot be divided into multiple owner payments.")
                        GoTo Skip
                    End If

                    'Check if already processed
                    If l.Contains(.Item("PROP_ID").ToString + .Item("TAXYEAR").ToString) = True Then
                        GoTo Skip
                    End If




                    'Check eligibility for Propertyowner detail
                    Me.PROPERTYOWNERDETAILTableAdapter.FillByPropertyID(Me.DebitDS.PROPERTYOWNERDETAIL, .Item("PROP_ID"))
                    If Me.DebitDS.PROPERTYOWNERDETAIL.Rows.Count = 0 Then
                        MsgBox("The Property with TDNO: " + .Item("TDNO").ToString + " has no multiple owners indicated in its Property Ownership Details.")
                        GoTo Skip
                    ElseIf Me.DebitDS.PROPERTYOWNERDETAIL.Rows.Count = 1 Then
                        MsgBox("The Property with TDNO: " + .Item("TDNO").ToString + " has only one owner indicated in its Property Ownership Details.")
                        GoTo Skip
                    Else
                        Dim tl As Decimal
                        tl = 0
                        For Each r As DataRow In DebitDS.PROPERTYOWNERDETAIL.Rows
                            Try
                                tl = tl + CType(r("PERCENTAGE"), Decimal)
                            Catch ex As Exception
                                tl = tl + 0
                            End Try
                        Next
                        If tl = 1 Then
                        Else
                            MsgBox("The Property with TDNO: " + .Item("TDNO").ToString + " does not have a total of 100% of ownership indicated in its Property Ownership Details.")
                            GoTo Skip
                        End If
                    End If


                    'Delete all TP Account record with matching (Taxyear, Prop_ID and TDNO) of this record
                    Dim com As New SqlCommand("DELETE FROM TPACCOUNT where PROP_ID=" + .Item("PROP_ID").ToString + " AND TAXYEAR=" + .Item("TAXYEAR").ToString + " AND EARMARK_CT='OPN'", conn)
                    conn.Open()
                    com.ExecuteNonQuery()
                    conn.Close()

                    For Each r As DataRow In DebitDS.PROPERTYOWNERDETAIL.Rows
                        'Create New ASS record for BSC and SEF with based on the percentage of ownership
                        rw = DebitDS.TPACCOUNT.NewRow
                        rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                        rw("PROP_ID") = .Item("PROP_ID")
                        rw("LOCAL_TIN") = localtin
                        rw("TAXYEAR") = .Item("TAXYEAR")
                        rw("MUNICIPAL_ID") = currentmunicipalID
                        rw("ITAXTYPE_CT") = "BSC"
                        rw("CREDITAMOUNT") = 0
                        rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 2) * CType(r("PERCENTAGE"), Decimal), 2)
                        rw("VALUEDATE") = DateValue(currentdate)
                        rw("EARMARK_CT") = "OPN"
                        rw("EVENTOBJECT_CT") = "MUL"
                        rw("CASETYPE_CT") = "REG"
                        rw("TAXPERIOD_CT") = 99
                        rw("USERID") = currentuser
                        rw("CANCELLED_BV") = False

                        If Len(r("ownername").ToString) < 3 Then
                            rw("BOOKINGREFERENCE") = r("DETAILLOCAL_TIN").ToString + " (" + (CType(r("PERCENTAGE"), Decimal) * 100).ToString("##.00") + "% owned) " + r("LASTNAME").ToString + ", " + r("FIRSTNAME").ToString
                        Else
                            rw("BOOKINGREFERENCE") = r("DETAILLOCAL_TIN").ToString + " (" + (CType(r("PERCENTAGE"), Decimal) * 100).ToString("##.00") + "% owned) " + r("OWNERNAME").ToString
                        End If

                        DebitDS.TPACCOUNT.Rows.Add(rw)

                        rw = DebitDS.TPACCOUNT.NewRow
                        rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                        rw("PROP_ID") = .Item("PROP_ID")
                        rw("LOCAL_TIN") = localtin
                        rw("TAXYEAR") = .Item("TAXYEAR")
                        rw("MUNICIPAL_ID") = currentmunicipalID
                        rw("ITAXTYPE_CT") = "SEF"
                        rw("CREDITAMOUNT") = 0
                        rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 2) * CType(r("PERCENTAGE"), Decimal), 2)
                        rw("VALUEDATE") = DateValue(currentdate)
                        rw("EARMARK_CT") = "OPN"
                        rw("EVENTOBJECT_CT") = "MUL"
                        rw("CASETYPE_CT") = "REG"
                        rw("TAXPERIOD_CT") = 99
                        rw("USERID") = currentuser
                        rw("CANCELLED_BV") = False

                        If Len(r("ownername").ToString) < 3 Then
                            rw("BOOKINGREFERENCE") = r("DETAILLOCAL_TIN").ToString + " (" + (CType(r("PERCENTAGE"), Decimal) * 100).ToString("##.00") + "% owned) " + r("LASTNAME").ToString + ", " + r("FIRSTNAME").ToString
                        Else
                            rw("BOOKINGREFERENCE") = r("DETAILLOCAL_TIN").ToString + " (" + (CType(r("PERCENTAGE"), Decimal) * 100).ToString("##.00") + "% owned) " + r("OWNERNAME").ToString
                        End If

                        DebitDS.TPACCOUNT.Rows.Add(rw)
                    Next

                    l.Add(.Item("PROP_ID").ToString + .Item("TAXYEAR").ToString)
Skip:
                End If
            End With
        Next
        Validate()
        TPBS.EndEdit()
        TPACCOUNTTableAdapter.Update(DebitDS.TPACCOUNT)
        MsgBox("Posting Successful.", vbOKOnly, "Message")


        delete_pendisc()
        compute_pendisc()
        DuesTableAdapter.FillByOwner(DebitDS.Dues, localtin)

        For Each r As DataRow In DebitDS.Properties.Rows
            Try
                If r("chk") = True Then
                    changeval(True, r("TDNO"))
                Else
                    changeval(False, r("TDNO"))
                End If
                updateview()
            Catch ex As Exception
            End Try
        Next
    End Sub

    Private Sub DuesDataGridView_CellContentClick(sender As Object, e As DataGridViewCellEventArgs) Handles DuesDataGridView.CellContentClick
        DuesDataGridView.CommitEdit(DataGridViewDataErrorContexts.Commit)
    End Sub

    Private Sub DuesDataGridView_CellValueChanged(sender As Object, e As DataGridViewCellEventArgs) Handles DuesDataGridView.CellValueChanged
        Try

            If DuesDataGridView.CurrentCell.ColumnIndex = 0 Then
                If DuesDataGridView.CurrentRow.Cells(0).Value = True Then
                    DebitDS.Dues.Rows(DuesDataGridView.CurrentRow.Index).Item("payable") = DebitDS.Dues.Rows(DuesDataGridView.CurrentRow.Index).Item("amountdue")
                Else
                    DebitDS.Dues.Rows(DuesDataGridView.CurrentRow.Index).Item("payable") = 0
                End If
            End If
            DuesDataGridView.Refresh()
        Catch ex As Exception

        End Try
    End Sub



    Private Function haspaymentsMUL() As Boolean

        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.Rows(x)
                If .Item("chk") = True Then
                    Dim dt As DataRow() = DebitDS.Dues.Select("PROP_ID=" + .Item("PROP_ID").ToString + " AND TDNO='" + .Item("TDNO").ToString + "' AND TAXYEAR=" + .Item("TAXYEAR").ToString)
                    Dim percent As Decimal
                    percent = 0
                    For Each rw As DataRow In dt
                        percent = percent + CType(rw("BOOKINGREFERENCE").ToString.Substring(rw("BOOKINGREFERENCE").ToString.IndexOf("(") + 1, 5), Decimal)
                    Next
                    If percent = 100 Then
                        Return False
                    Else
                        Return True
                    End If
                End If

            End With
        Next

        Return False
    End Function

    Private Function checkyearlydues() As Boolean
        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.Rows(x)

                If .Item("chk") = True And .Item("taxperiod") = "YEARLY" Then
                        Return False
                    End If


            End With
        Next
        Return True
    End Function

    Private Function checkmuldues() As Boolean
        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.Rows(x)
                If .Item("chk") = True And .Item("EVENTOBJECT_CT").ToString <> "MUL" Then
                    Return False
                End If
            End With
        Next
        Return True
    End Function

    Private Function checkcredits() As Boolean
        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.Rows(x)
                If .Item("chk") = True And CType(.Item("tcr").ToString, Decimal) <> 0 Then
                    Return False
                End If
            End With
        Next
        Return True
    End Function

    Private Function checkmuldues2() As Boolean
        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.Rows(x)
                If .Item("chk") = True And .Item("EVENTOBJECT_CT").ToString = "MUL" Then
                    Return False
                End If
            End With
        Next
        Return True
    End Function

    Private Function checkbiquarterdues() As Boolean
        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.Rows(x)
                If .Item("chk") = True And .Item("taxperiod").ToString <> "YEARLY" And Not (.Item("EVENTOBJECT_CT") = "TCR" Or .Item("EVENTOBJECT_CT") = "TDF") Then
                    Return False
                End If
            End With
        Next
        Return True
    End Function

    Private Function haspayments() As Boolean

        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.Rows(x)
                If .Item("chk") = True And .Item("taxperiod").ToString.Contains("BI-ANNUAL") Then
                    Dim dt As DataRow() = DebitDS.Dues.Select("PROP_ID=" + .Item("PROP_ID").ToString + " AND TDNO='" + .Item("TDNO").ToString + "' AND TAXYEAR=" + .Item("TAXYEAR").ToString + " AND (EVENTOBJECT_CT='MUL' OR EVENTOBJECT_CT='TXP') AND JOURNALID=" + .Item("JOURNALID").ToString)
                    If dt.Count = 2 Then
                    Else
                        Return True
                    End If
                ElseIf .Item("chk") = True And .Item("taxperiod").ToString.Contains("QUARTER") Then
                    Dim dt As DataRow() = DebitDS.Dues.Select("PROP_ID=" + .Item("PROP_ID").ToString + " AND TDNO='" + .Item("TDNO").ToString + "' AND TAXYEAR=" + .Item("TAXYEAR").ToString + " AND (EVENTOBJECT_CT='MUL' or EVENTOBJECT_CT='TXP') AND JOURNALID=" + .Item("JOURNALID").ToString)
                    If dt.Count = 4 Then
                    Else
                        Return True
                    End If
                End If
            End With
        Next

        Return False
    End Function

    Private Sub undodiv_b_Click(sender As Object, e As EventArgs) Handles undodiv_b.Click
        If DebitDS.Dues.Rows.Count = 0 Then
        Else
            Dim x As String = MsgBox("Are you sure you want to undo the Division?", vbYesNo, "Confirmation")
            If x = vbYes Then
                If checkyearlydues() = True Then 'means this is bi annual or quarterly
                    If checkmuldues2() = True Then ' means this is not multiple payment
                        If haspayments() = True Then
                            MsgBox("The selected taxperiod has already a payment. Therefore it cannot be processed.", vbOKOnly, "Message")
                        Else
                            undo_div()
                        End If
                    Else
                        MsgBox("Cannot process rows with multiple payments.", vbOK, "Invalid Selection")
                    End If
                Else 'means it is yearly therefore it cannot be undivided
                    If checkmuldues2() = True Then ' means this is not multiple payment
                        MsgBox("Please select Quarterly or Bi-Annual dues only.", vbOK, "Invalid Selection")
                    Else 'means this is in multiple payments
                        MsgBox("Cannot process rows with multiple payments.", vbOK, "Invalid Selection")
                    End If
                End If
            End If
        End If
        Try

            If PropertiesDataGridView.CurrentCell.ColumnIndex = 0 Then
                If PropertiesDataGridView.CurrentRow.Cells("chk").Value = True Then
                    changeval(True, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                Else
                    changeval(False, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                End If
                updateview()
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Function get_source(prop_id As Integer, taxyear As Integer, journalid As Integer)
        Dim adap As New SqlDataAdapter("SELECT TOP(1) SOURCE_CT FROM POSTINGJOURNAL WHERE PROP_ID=" + prop_id.ToString + " AND TAXYEAR=" + taxyear.ToString + " AND POSTINGJOURNAL_ID=" + journalid.ToString, conn)
        Dim dbset As New DataSet
        adap.Fill(dbset, "a")
        If dbset.Tables("a").Rows.Count = 0 Then
            Return "ASS"
        Else
            Return dbset.Tables("a").Rows(0).Item(0).ToString
        End If
    End Function

    Private Sub undo_div()
        DebitDS.TPACCOUNT.Clear()
        Dim rw As DataRow
        Dim l As New ArrayList
        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.Rows(x)
                If .Item("chk") = True Then
                    If .Item("EVENTOBJECT_CT") = "TDF" Or .Item("EVENTOBJECT_CT") = "TCR" Or .Item("EVENTOBJECT_CT") = "PBL" Then
                        MsgBox("Tax Dues with Tax Credit, Tax Difference or Partial Pay cannot be undivided.")
                        GoTo Skip
                    End If
                    'Check if already processed
                    If l.Contains(.Item("PROP_ID").ToString + .Item("TAXYEAR").ToString + .Item("JOURNALID").ToString) = True Then
                        GoTo Skip
                    End If

                    'Delete all TP Account record with matching (Taxyear, Prop_ID,TDNO and JOURNALID) of this record
                    Dim com As New SqlCommand("DELETE FROM TPACCOUNT where PROP_ID=" + .Item("PROP_ID").ToString + " AND TAXYEAR=" + .Item("TAXYEAR").ToString + " AND EARMARK_CT='OPN' AND NOT(EVENTOBJECT_CT='TCR' OR EVENTOBJECT_CT='TDF') AND JOURNALID=" + .Item("JOURNALID").ToString, conn)
                    conn.Open()
                    com.ExecuteNonQuery()
                    conn.Close()

                    'Create New ASS record for BSC and SEF with Yearly Payment

                    Dim source As String = get_source(.Item("PROP_ID"), .Item("TAXYEAR"), .Item("JOURNALID"))
                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "BSC"
                    rw("CREDITAMOUNT") = 0
                    If .Item("Taxperiod").ToString.Contains("BI-ANNUAL") = True Then
                        rw("DEBITAMOUNT") = Round(CType(.Item("TaxDue"), Decimal), 2)
                    Else
                        rw("DEBITAMOUNT") = Round(CType(.Item("TaxDue"), Decimal), 2) * 2
                    End If
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = source
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 99
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)

                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "SEF"
                    rw("CREDITAMOUNT") = 0
                    If .Item("Taxperiod").ToString.Contains("BI-ANNUAL") = True Then
                        rw("DEBITAMOUNT") = Round(CType(.Item("TaxDue"), Decimal), 2)
                    Else
                        rw("DEBITAMOUNT") = Round(CType(.Item("TaxDue"), Decimal), 2) * 2
                    End If
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = source
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 99
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)
                    l.Add(.Item("PROP_ID").ToString + .Item("TAXYEAR").ToString + .Item("JOURNALID").ToString)
Skip:
                    End If
            End With
        Next
        Validate()
        TPBS.EndEdit()
        TPACCOUNTTableAdapter.Update(DebitDS.TPACCOUNT)

        For Each rww As DataRow In DebitDS.TPACCOUNT.Rows
            Dim com As New SqlCommand("UPDATE TPACCOUNT SET REFPOSTINGID=" + rww("POSTING_ID").ToString + " WHERE PROP_ID=" + rww("PROP_ID").ToString + " AND TAXYEAR=" + rww("TAXYEAR").ToString + " AND TAXPERIOD_CT='" + rww("TAXPERIOD_CT").ToString + "' AND (EVENTOBJECT_CT='TCR' OR EVENTOBJECT_CT='TDF') AND ITAXTYPE_CT='" + rww("ITAXTYPE_CT").ToString + "' AND JOURNALID=" + rww("JOURNALID").ToString, conn)
            conn.Open()
            com.ExecuteNonQuery()
            conn.Close()
        Next

        MsgBox("Posting Successful.", vbOKOnly, "Message")

        delete_pendisc()
        compute_pendisc()
        DuesTableAdapter.FillByOwner(DebitDS.Dues, localtin)
        recomputepayable()

        For Each r As DataRow In DebitDS.Properties.Rows
            Try
                If r("chk") = True Then
                    changeval(True, r("TDNO"))
                Else
                    changeval(False, r("TDNO"))
                End If
                updateview()
            Catch ex As Exception
            End Try
        Next
    End Sub

    Private Sub quarter_b_Click(sender As Object, e As EventArgs) Handles quarter_b.Click
        If DebitDS.Dues.Rows.Count = 0 Then
        Else
            Dim x As String = MsgBox("Are you sure you want to split the payment quarterly?", vbYesNo, "Confirmation")
            If x = vbYes Then
                If checkbiquarterdues() = True Then
                    If checkmuldues2() = True Then
                        If checkcredits() = True Then
                            quarterly()
                        Else
                            MsgBox("Cannot process rows with credits.", vbOK, "Invalid Selection")
                        End If
                    Else
                        MsgBox("Cannot process rows with multiple payments.", vbOK, "Invalid Selection")
                    End If
                Else
                    MsgBox("Please select yearly tax dues only.", vbOK, "Invalid Selection")
                End If
            End If
        End If
        Try

            If PropertiesDataGridView.CurrentCell.ColumnIndex = 0 Then
                If PropertiesDataGridView.CurrentRow.Cells("chk").Value = True Then
                    changeval(True, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                Else
                    changeval(False, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                End If
                updateview()
            End If
        Catch ex As Exception

        End Try
    End Sub


    Private Sub quarterly()
        DebitDS.TPACCOUNT.Clear()
        Dim rw As DataRow
        Dim l As New ArrayList
        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.Rows(x)
                If .Item("chk") = True Then
                    If .Item("EVENTOBJECT_CT") = "TDF" Or .Item("EVENTOBJECT_CT") = "TCR" Or .Item("EVENTOBJECT_CT") = "PBL" Then
                        MsgBox("Tax Dues with Tax Credit, Tax Difference or Partial Pay cannot be divided quarterly.")
                        GoTo Skip
                    End If

                    'Check if already processed
                    If l.Contains(.Item("PROP_ID").ToString + .Item("TAXYEAR").ToString + .Item("JOURNALID").ToString) = True Then
                        GoTo Skip
                    End If

                    'Delete all TP Account record with matching (Taxyear, Prop_ID and TDNO) of this record
                    Dim com As New SqlCommand("DELETE FROM TPACCOUNT where PROP_ID=" + .Item("PROP_ID").ToString + " AND TAXYEAR=" + .Item("TAXYEAR").ToString + " AND EARMARK_CT='OPN' AND NOT(EVENTOBJECT_CT='TCR' OR EVENTOBJECT_CT='TDF') AND JOURNALID=" + .Item("JOURNALID").ToString, conn)
                    conn.Open()
                    com.ExecuteNonQuery()
                    conn.Close()

                    'Create New ASS record for BSC and SEF with quarterly Payment


                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "BSC"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = divide_exact(CType(.Item("TaxDue"), Decimal), True) / 2
                    'rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 4) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 41
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)

                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "SEF"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = divide_exact(CType(.Item("TaxDue"), Decimal), True) / 2
                    'rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 4) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 41
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)

                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "BSC"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = divide_exact(CType(.Item("TaxDue"), Decimal), False) / 2
                    'rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 4) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 42
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)

                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "SEF"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = divide_exact(CType(.Item("TaxDue"), Decimal), False) / 2
                    'rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 4) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 42
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)

                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "BSC"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = divide_exact(CType(.Item("TaxDue"), Decimal), False) / 2
                    'rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 4) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 43
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)

                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "SEF"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = divide_exact(CType(.Item("TaxDue"), Decimal), False) / 2
                    'rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 4) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 43
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)

                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "BSC"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = divide_exact(CType(.Item("TaxDue"), Decimal), False) / 2
                    'rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 4) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 44
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)

                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "SEF"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = divide_exact(CType(.Item("TaxDue"), Decimal), False) / 2
                    'rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 4) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 44
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)
                    l.Add(.Item("PROP_ID").ToString + .Item("TAXYEAR").ToString + .Item("JOURNALID").ToString)
Skip:
                End If
            End With
        Next
        Validate()
        TPBS.EndEdit()
        TPACCOUNTTableAdapter.Update(DebitDS.TPACCOUNT)
        MsgBox("Posting Successful.", vbOKOnly, "Message")

        delete_pendisc()
        compute_pendisc()
        DuesTableAdapter.FillByOwner(DebitDS.Dues, localtin)
        recomputepayable()
        For Each r As DataRow In DebitDS.Properties.Rows
            Try
                If r("chk") = True Then
                    changeval(True, r("TDNO"))
                Else
                    changeval(False, r("TDNO"))
                End If
                updateview()
            Catch ex As Exception
            End Try
        Next
    End Sub

    Private Sub biannual()
        DebitDS.TPACCOUNT.Clear()
        Dim rw As DataRow
        Dim l As New ArrayList
        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
            With DebitDS.Dues.Rows(x)
                If .Item("chk") = True Then
                    If .Item("EVENTOBJECT_CT") = "TDF" Or .Item("EVENTOBJECT_CT") = "TCR" Or .Item("EVENTOBJECT_CT") = "PBL" Then
                        MsgBox("Tax Dues with Tax Credit, Tax Difference or Partial Pay cannot be divided bi-annually.")
                        GoTo Skip
                    End If


                    'Check if already processed
                    If l.Contains(.Item("PROP_ID").ToString + .Item("TAXYEAR").ToString + .Item("JOURNALID").ToString) = True Then
                        GoTo Skip
                    End If

                    'Delete all TP Account record with matching (Taxyear, Prop_ID,TDNO and JournalID) of this record
                    Dim com As New SqlCommand("DELETE FROM TPACCOUNT where PROP_ID=" + .Item("PROP_ID").ToString + " AND TAXYEAR=" + .Item("TAXYEAR").ToString + " AND EARMARK_CT='OPN' AND NOT(EVENTOBJECT_CT='TCR' OR EVENTOBJECT_CT='TDF') AND JOURNALID=" + .Item("JOURNALID").ToString, conn)
                    conn.Open()
                    com.ExecuteNonQuery()
                    conn.Close()

                    'Create New ASS record for BSC and SEF with quarterly Payment


                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "BSC"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 2) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 21
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)

                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "SEF"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 2) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 21
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)


                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "BSC"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 2) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 22
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)

                    rw = DebitDS.TPACCOUNT.NewRow
                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
                    rw("PROP_ID") = .Item("PROP_ID")
                    rw("LOCAL_TIN") = localtin
                    rw("TAXYEAR") = .Item("TAXYEAR")
                    rw("MUNICIPAL_ID") = currentmunicipalID
                    rw("ITAXTYPE_CT") = "SEF"
                    rw("CREDITAMOUNT") = 0
                    rw("DEBITAMOUNT") = Round((CType(.Item("TaxDue"), Decimal) / 2) / 2, 2)
                    rw("VALUEDATE") = DateValue(currentdate)
                    rw("EARMARK_CT") = "OPN"
                    rw("EVENTOBJECT_CT") = "TXP"
                    rw("CASETYPE_CT") = "REG"
                    rw("TAXPERIOD_CT") = 22
                    rw("USERID") = currentuser
                    rw("CANCELLED_BV") = False
                    rw("JOURNALID") = .Item("JOURNALID")
                    DebitDS.TPACCOUNT.Rows.Add(rw)



                    l.Add(.Item("PROP_ID").ToString + .Item("TAXYEAR").ToString + .Item("JOURNALID").ToString)
Skip:
                End If
            End With
        Next
        Validate()
        TPBS.EndEdit()
        TPACCOUNTTableAdapter.Update(DebitDS.TPACCOUNT)
        MsgBox("Posting Successful.", vbOKOnly, "Message")


        delete_pendisc()
        compute_pendisc()
        DuesTableAdapter.FillByOwner(DebitDS.Dues, localtin)
        recomputepayable()

        For Each r As DataRow In DebitDS.Properties.Rows
            Try
                If r("chk") = True Then
                    changeval(True, r("TDNO"))
                Else
                    changeval(False, r("TDNO"))
                End If
                updateview()
            Catch ex As Exception
            End Try
        Next
    End Sub

    Private Sub biannual_b_Click(sender As Object, e As EventArgs) Handles biannual_b.Click
        If DebitDS.Dues.Rows.Count = 0 Then
        Else
            Dim x As String = MsgBox("Are you sure you want to split the payment Bi-Annually?", vbYesNo, "Confirmation")
            If x = vbYes Then
                If checkbiquarterdues() = True Then
                    If checkmuldues2() = True Then
                        If checkcredits() = True Then
                            biannual()
                        Else
                            MsgBox("Cannot process rows with credits.", vbOK, "Invalid Selection")
                        End If
                    Else
                        MsgBox("Cannot process rows with multiple payments.", vbOK, "Invalid Selection")
                    End If
                Else
                    MsgBox("Please select yearly tax dues only.", vbOK, "Invalid Selection")
                End If
            End If
        End If
        Try

            If PropertiesDataGridView.CurrentCell.ColumnIndex = 0 Then
                If PropertiesDataGridView.CurrentRow.Cells("chk").Value = True Then
                    changeval(True, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                Else
                    changeval(False, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                End If
                updateview()
            End If
        Catch ex As Exception

        End Try
    End Sub

    Private Sub undomul_b_Click(sender As Object, e As EventArgs) Handles undomul_b.Click
        'If DebitDS.Dues.Rows.Count = 0 Then
        'Else
        '    Dim x As String = MsgBox("Are you sure you want to undo the Multiple Payment Division?", vbYesNo, "Confirmation")
        '    If x = vbYes Then
        '        If checkmuldues() = True Then
        '            If haspaymentsMUL() = True Then
        '                MsgBox("One Or more of the owners already made payment on thier part. Therefore in cannot be processed back into single owner payment.", vbOK, "Message")
        '            Else
        '                undo_mul()
        '            End If
        '        Else
        '            MsgBox("The row(s) selected are Not In Multiple Payments.", vbOK, "Invalid Selection")
        '        End If
        '    End If
        'End If
    End Sub

    '    Private Sub undo_mul()
    '        DebitDS.TPACCOUNT.Clear()
    '        Dim rw As DataRow
    '        Dim l As New ArrayList
    '        Dim percnt As Decimal = 0
    '        For x As Integer = 0 To DebitDS.Dues.Rows.Count - 1
    '            With DebitDS.Dues.Rows(x)
    '                If .Item("chk") = True Then

    '                    If .Item("EVENTOBJECT_CT") = "TDF" Or .Item("EVENTOBJECT_CT") = "TCR" Then
    '                        GoTo Skip
    '                    End If

    '                    'Check if already processed
    '                    If l.Contains(.Item("PROP_ID").ToString + .Item("TAXYEAR").ToString) = True Then
    '                        GoTo Skip
    '                    End If

    '                    'Delete all TP Account record with matching (Taxyear, Prop_ID and TDNO) of this record
    '                    Dim com As New SqlCommand("DELETE FROM TPACCOUNT where PROP_ID= " + .Item("PROP_ID").ToString + " And TAXYEAR=" + .Item("TAXYEAR").ToString + " And EARMARK_CT='OPN'", conn)
    '                    conn.Open()
    '                    com.ExecuteNonQuery()
    '                    conn.Close()

    '                    'Create New ASS record for BSC and SEF with Yearly Payment
    '                    Dim source As String = get_source(.Item("PROP_ID"), .Item("TAXYEAR"))
    '                    rw = DebitDS.TPACCOUNT.NewRow
    '                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
    '                    rw("PROP_ID") = .Item("PROP_ID")
    '                    rw("LOCAL_TIN") = localtin
    '                    rw("TAXYEAR") = .Item("TAXYEAR")
    '                    rw("MUNICIPAL_ID") = currentmunicipalID
    '                    rw("ITAXTYPE_CT") = "BSC"
    '                    rw("CREDITAMOUNT") = 0
    '                    percnt = CType(.Item("BOOKINGREFERENCE").ToString.Substring(.Item("BOOKINGREFERENCE").ToString.IndexOf("(") + 1, 5), Decimal) / 100

    '                    rw("DEBITAMOUNT") = (Round(CType(.Item("TaxDue"), Decimal), 2) / 2) / percnt

    '                    rw("VALUEDATE") = DateValue(currentdate)
    '                    rw("EARMARK_CT") = "OPN"
    '                    rw("EVENTOBJECT_CT") = source
    '                    rw("CASETYPE_CT") = "REG"
    '                    rw("TAXPERIOD_CT") = 99
    '                    rw("USERID") = currentuser
    '                    rw("CANCELLED_BV") = False
    '                    DebitDS.TPACCOUNT.Rows.Add(rw)

    '                    rw = DebitDS.TPACCOUNT.NewRow
    '                    rw("TAXTRANS_ID") = .Item("TAXTRANS_ID")
    '                    rw("PROP_ID") = .Item("PROP_ID")
    '                    rw("LOCAL_TIN") = localtin
    '                    rw("TAXYEAR") = .Item("TAXYEAR")
    '                    rw("MUNICIPAL_ID") = currentmunicipalID
    '                    rw("ITAXTYPE_CT") = "SEF"
    '                    rw("CREDITAMOUNT") = 0

    '                    rw("DEBITAMOUNT") = (Round(CType(.Item("TaxDue"), Decimal), 2) / 2) / percnt

    '                    rw("VALUEDATE") = DateValue(currentdate)
    '                    rw("EARMARK_CT") = "OPN"
    '                    rw("EVENTOBJECT_CT") = source
    '                    rw("CASETYPE_CT") = "REG"
    '                    rw("TAXPERIOD_CT") = 99
    '                    rw("USERID") = currentuser
    '                    rw("CANCELLED_BV") = False
    '                    DebitDS.TPACCOUNT.Rows.Add(rw)
    '                    l.Add(.Item("PROP_ID").ToString + .Item("TAXYEAR").ToString)
    'Skip:
    '                End If
    '            End With
    '        Next
    '        Validate()
    '        TPBS.EndEdit()
    '        TPACCOUNTTableAdapter.Update(DebitDS.TPACCOUNT)
    '        MsgBox("Posting Successful.", vbOKOnly, "Message")

    '        delete_pendisc()
    '        compute_pendisc()
    '        DuesTableAdapter.FillByOwner(DebitDS.Dues, localtin)
    '        recomputepayable()

    '        For Each r As DataRow In DebitDS.Properties.Rows
    '            Try
    '                If r("chk") = True Then
    '                    changeval(True, r("TDNO"))
    '                Else
    '                    changeval(False, r("TDNO"))
    '                End If
    '                updateview()
    '            Catch ex As Exception
    '            End Try
    '        Next
    '    End Sub

    Private Sub return_b_Click(sender As Object, e As EventArgs) Handles return_b.Click
        'MsgBox(DebitDS.Dues.Rows.Count - 1)
        For x As Integer = DebitDS.Dues.Rows.Count - 1 To 0 Step -1
            'MsgBox(DebitDS.Dues.Rows(x).Item("chk"))
            If DebitDS.Dues.Rows(x).Item("chk") = True Then
                lastcheck(x)
                Exit Sub
            End If
        Next
        MsgBox("No selected items.", MsgBoxStyle.OkOnly, "Message")
    End Sub
    Public returns As ArrayList
    Private Sub lastcheck(c As Integer)
        returns = New ArrayList
        Dim credits As Integer = 0
        Dim table As New DataTable

        table.Columns.Add("TDNO", GetType(String))
        table.Columns.Add("Value", GetType(String))
        Dim rw As DataRow
        For x = 0 To c
            If DebitDS.Dues.Rows(x).Item("vis") = False Then
            Else
                If DebitDS.Dues.Rows(x).Item("chk") = False Then
                    MsgBox("One or more payments cannot be skipped.", vbOKOnly, "Message")
                    Exit Sub
                Else
                    returns.Add(DebitDS.Dues.Rows(x).Item("POSTING_ID"))
                    rw = table.NewRow
                    rw(0) = DebitDS.Dues.Rows(x).Item("TDNO")
                    rw(1) = DebitDS.Dues.Rows(x).Item("TaxDue")
                    table.Rows.Add(rw)
                    If CType(DebitDS.Dues.Rows(x).Item("tcr"), Decimal) <> 0 Then
                        credits = credits + 1
                    End If
                End If
            End If
        Next

        Dim distinctDT As DataTable = table.DefaultView.ToTable(True, "TDNO", "Value")
        DataGridView1.DataSource = distinctDT

        If (distinctDT.Rows.Count + credits) > 6 Then
            MsgBox("Cannot process payment of more than six different properties/assessment dues or tax credits value per transaction.")
            Exit Sub
        End If

        DialogResult = DialogResult.OK
    End Sub

    Private Sub Checkall_CheckedChanged(sender As Object, e As EventArgs) Handles Checkall.CheckedChanged

    End Sub

    Private Sub DuesBindingSource_CurrentChanged(sender As Object, e As EventArgs) Handles DuesBindingSource.CurrentChanged

    End Sub

    Private Sub DuesBindingSource_DataMemberChanged(sender As Object, e As EventArgs) Handles DuesBindingSource.DataMemberChanged

    End Sub

    Private Sub datacol(sender As Object, e As DataColumnChangeEventArgs)

        If e.Column.ColumnName = "chk" Or e.Column.ColumnName = "payable" Then
            Dim allcheck As Boolean = True
            Dim amountdue As Decimal = 0
            Dim selectdue As Decimal = 0

            For Each rw As DataRow In DebitDS.Dues.Rows
                If rw("vis") = False Then
                Else
                    amountdue += rw("amountdue")
                    If rw("chk") = False Then
                        allcheck = False
                    Else
                        Try
                            selectdue += rw("payable")
                        Catch ex As Exception

                        End Try

                    End If
                End If
            Next

            If allcheck = False Then
                Checkall.Checked = False
                unselect_b.Text = "Select All"
            Else
                Checkall.Checked = True
                unselect_b.Text = "Unselect All"
            End If
            amtdue.Text = Format(amountdue, "##,##0.00")
            seldue.Text = Format(selectdue, "##,##0.00")

        End If
    End Sub


    Private Sub Checkall_Click(sender As Object, e As EventArgs) Handles Checkall.Click
        If Checkall.Checked = True Then
            unselect_b.Text = "Unselect All"

            If DebitDS.Dues.Rows.Count = 0 Then
            Else
                For Each rw As DataRow In DebitDS.Dues.Rows
                    If rw("vis") = False Then
                    Else
                        rw("chk") = True
                    End If
                Next
            End If
        Else
            unselect_b.Text = "Select All"
            If DebitDS.Dues.Rows.Count = 0 Then
            Else
                For Each rw As DataRow In DebitDS.Dues.Rows
                    If rw("vis") = False Then
                    Else
                        rw("chk") = False
                    End If
                Next
            End If
        End If

        recomputepayable()

    End Sub

    Private Sub taxbill_Click(sender As Object, e As EventArgs) Handles taxbill.Click
        Dim frm As New Taxduebill
        frm.localtin = localtin
        frm.Show()
        frm.retrievelocaltin()
    End Sub

    Private Sub recomputepayable()
        For Each rww As DataRow In DebitDS.Dues.Rows
            If rww("chk") = True And rww("vis") = True Then
                rww.Item("payable") = rww.Item("amountdue")
            Else
                rww.Item("payable") = 0
            End If
        Next
    End Sub

    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click
        Dim selectioncounter As Integer = 0
        For Each rw As DataRow In DebitDS.Dues.Rows
            If rw("chk") = True And rw("vis") = True Then
                selectioncounter += 1
            End If
        Next

        If selectioncounter = 1 Then
        Else
            MsgBox("Must select 1 record.", vbOKOnly, "Message")
            Exit Sub
        End If

        For Each rw As DataRow In DebitDS.Dues.Rows
            If rw("chk") = True Then

                If Not (rw("EVENTOBJECT_CT") = "TCR" Or rw("EVENTOBJECT_CT") = "TDF" Or rw("EVENTOBJECT_CT") = "PBL") Then
                    If taxcredt Is Nothing Then
                    Else
                        taxcredt.Close()
                    End If

                    taxcredt = New TaxCredit
                    taxcredt.prop_id = rw("PROP_ID")
                    taxcredt.taxyear = rw("TAXYEAR")
                    taxcredt.local_tin = localtin
                    taxcredt.taxtrans_id = rw("TAXTRANS_ID")
                    taxcredt.journalid = rw("JOURNALID")
                    taxcredt.taxperiod = rw("taxperiod")
                    taxcredt.taxdec = rw("TDNO")
                    taxcredt.taxdue = rw("taxdue")
                    taxcredt.bsc_id = rw("bsc_id")
                    taxcredt.sef_id = rw("sef_id")

                    If taxcredt.ShowDialog() = DialogResult.OK Then
                        MsgBox("Posting Successful.")
                        Me.DuesTableAdapter.FillByOwner(Me.DebitDS.Dues, localtin)
                        recomputepayable()
                    End If

                    Exit For
                Else
                    MsgBox("Tax Dues with applied Tax Credit, Tax Difference Or Partial Pay cannot be processed.")
                End If

            End If
        Next
    End Sub

    Private Sub Button2_Click(sender As Object, e As EventArgs)
        For Each rw As DataRow In DebitDS.Dues.Rows
            If rw("chk") = True And Not (rw("EVENTOBJECT_CT") = "TCR" Or rw("EVENTOBJECT_CT") = "TDF" Or rw("EVENTOBJECT_CT") = "PBL") Then
                If taxdif Is Nothing Then
                Else
                    taxdif.Close()
                End If
                taxdif = New TaxDifference
                taxdif.prop_id = rw("PROP_ID")
                taxdif.taxyear = rw("TAXYEAR")
                taxdif.taxperiod = rw("taxperiod")
                taxdif.taxdec = rw("TDNO")
                taxdif.taxdue = rw("taxdue")

                If taxdif.ShowDialog() = DialogResult.OK Then
                    MsgBox("Posting Successful.")
                    Me.DuesTableAdapter.FillByOwner(Me.DebitDS.Dues, localtin)
                    recomputepayable()
                End If
                Exit For
            Else
                MsgBox("Tax Dues With applied Tax Credit, Tax Difference Or Partial Pay cannot be processed.")
            End If
        Next
    End Sub


    Private Sub Button4_Click(sender As Object, e As EventArgs) Handles Button4.Click
        Dim com As SqlCommand
        Dim period_code As String
        For Each rw As DataRow In DebitDS.Dues.Rows
            If rw("chk") = True And CType(rw("tcr"), Decimal) <> 0 Then
                If rw("taxperiod") = "1ST BI-ANNUAL" Then
                    period_code = "21"
                ElseIf rw("taxperiod") = "2ND BI-ANNUAL" Then
                    period_code = "22"
                ElseIf rw("taxperiod") = "1ST QUARTER" Then
                    period_code = "41"
                ElseIf rw("taxperiod") = "2ND QUARTER" Then
                    period_code = "42"
                ElseIf rw("taxperiod") = "3RD QUARTER" Then
                    period_code = "43"
                ElseIf rw("taxperiod") = "4TH QUARTER" Then
                    period_code = "44"
                ElseIf rw("taxperiod") = "YEARLY" Then
                    period_code = "99"
                Else
                    Exit Sub
                End If
                com = New SqlCommand("DELETE FROM TPACCOUNT WHERE PROP_ID=" + rw("PROP_ID").ToString + " And TAXYEAR=" + rw("TAXYEAR").ToString + " And TAXPERIOD_CT='" + period_code + "' AND EARMARK_CT='OPN' AND (EVENTOBJECT_CT='TCR' OR EVENTOBJECT_CT='TDF') AND JOURNALID=" + rw.Item("JOURNALID").ToString, conn)
                conn.Open()
                com.ExecuteNonQuery()
                conn.Close()

            End If
        Next
        MsgBox("Process Compeleted.")
        delete_pendisc()
        compute_pendisc()
        DuesTableAdapter.FillByOwner(DebitDS.Dues, localtin)
        recomputepayable()
    End Sub

    Private Sub Button5_Click(sender As Object, e As EventArgs) Handles Button5.Click
        Dim x As String = MsgBox("Are you sure you want to delete Penalty?", vbYesNo, "Confirmation")
        If x = vbYes Then
            Dim com As SqlCommand
            Dim period_code As String

            For Each rw As DataRow In DebitDS.Dues.Rows
                If rw("chk") = True Then
                    If rw("EVENTOBJECT_CT") = "ASS" Or rw("EVENTOBJECT_CT") = "MAN" Or rw("EVENTOBJECT_CT") = "TXP" Or rw("EVENTOBJECT_CT") = "MUL" Then
                        If rw("taxperiod") = "1ST BI-ANNUAL" Then
                            period_code = "21"
                        ElseIf rw("taxperiod") = "2ND BI-ANNUAL" Then
                            period_code = "22"
                        ElseIf rw("taxperiod") = "1ST QUARTER" Then
                            period_code = "41"
                        ElseIf rw("taxperiod") = "2ND QUARTER" Then
                            period_code = "42"
                        ElseIf rw("taxperiod") = "3RD QUARTER" Then
                            period_code = "43"
                        ElseIf rw("taxperiod") = "4TH QUARTER" Then
                            period_code = "44"
                        ElseIf rw("taxperiod") = "YEARLY" Then
                            period_code = "99"
                        Else
                            Exit Sub
                        End If
                        com = New SqlCommand("DELETE FROM TPACCOUNT WHERE PROP_ID=" + rw("PROP_ID").ToString + " AND TAXYEAR=" + rw("TAXYEAR").ToString + " AND TAXPERIOD_CT='" + period_code + "' AND EARMARK_CT='OPN' AND (EVENTOBJECT_CT='PEN' OR EVENTOBJECT_CT='DED')", conn)
                        conn.Open()
                        com.ExecuteNonQuery()
                        conn.Close()
                    End If
                End If
            Next
            MsgBox("Process Compeleted.")
            'delete_pendisc()
            'compute_pendisc()
            DuesTableAdapter.FillByOwner(DebitDS.Dues, localtin)
            Try

                If PropertiesDataGridView.CurrentCell.ColumnIndex = 0 Then
                    If PropertiesDataGridView.CurrentRow.Cells("chk").Value = True Then
                        changeval(True, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                    Else
                        changeval(False, PropertiesDataGridView.CurrentRow.Cells(1).Value)
                    End If
                    updateview()
                End If
            Catch ex As Exception

            End Try
            recomputepayable()
        End If
    End Sub

    Private Sub Button3_Click(sender As Object, e As EventArgs) Handles Button3.Click
        For Each rw As DataRow In DebitDS.Dues.Rows
            If rw("chk") = True And Not (rw("EVENTOBJECT_CT") = "TCR" Or rw("EVENTOBJECT_CT") = "TDF" Or rw("EVENTOBJECT_CT") = "PBL") Then
                If partialp Is Nothing Then
                Else
                    partialp.Close()
                End If
                partialp = New PayPartial
                partialp.prop_id = rw("PROP_ID")
                partialp.taxyear = rw("TAXYEAR")
                partialp.taxperiod = rw("taxperiod")
                partialp.taxdec = rw("TDNO")
                partialp.taxdue = rw("taxdue")
                partialp.local_tin = localtin
                partialp.taxtrans = rw("TAXTRANS_ID")

                If partialp.ShowDialog() = DialogResult.OK Then
                    MsgBox("Posting Successful.")
                    delete_pendisc()
                    compute_pendisc()
                    Me.DuesTableAdapter.FillByOwner(Me.DebitDS.Dues, localtin)
                    recomputepayable()
                End If
                Exit For
            Else
                MsgBox("Tax Dues with applied Tax Credit, Tax Difference or Partial Pay cannot be processed.")
            End If
        Next
    End Sub

    Private Sub Button6_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub cancel_b_Click(sender As Object, e As EventArgs)

    End Sub

    Private Sub CheckAll2_CheckedChanged(sender As Object, e As EventArgs) Handles CheckAll2.CheckedChanged

    End Sub

    Private Sub CheckAll2_Click(sender As Object, e As EventArgs) Handles CheckAll2.Click

        If PropertiesDataGridView.Rows.Count = 0 Then
        Else

            For Each rw As DataGridViewRow In PropertiesDataGridView.Rows
                If CheckAll2.Checked = True Then
                    rw.Cells(0).Value = True
                    changeval(True, rw.Cells(1).Value)
                Else
                    rw.Cells(0).Value = False
                    changeval(False, rw.Cells(1).Value)
                End If
            Next
            updateview()

        End If


    End Sub
End Class